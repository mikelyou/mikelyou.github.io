I"RR<blockquote>
  <p>Life is short, write your blog.</p>
</blockquote>

<p>本文详细介绍了本博客搭建的完整过程，并记录了本人在实际操作中遇到的问题。
<!--more--></p>

<h2 id="目录">目录</h2>

<ol>
  <li><a href="#前言">前言</a></li>
  <li><a href="#相关概念与工具">概念与工具</a></li>
  <li><strong><a href="#搭建博客的完整过程">搭建博客的完整过程</a></strong></li>
  <li><strong><a href="#如何更新博客">如何更新博客</a></strong></li>
  <li><a href="#后记">后记</a></li>
  <li><a href="#致谢">致谢</a></li>
</ol>

<h2 id="前言">前言</h2>

<p>刚刚开始研究生生活的我，学习知识的欲望又重新被点燃，很希望能通过写总结来促进和巩固对知识的学习。就在这个很好的时机，我发现了写博客这个方法。在看了 <strong><a href="https://zhuanlan.zhihu.com/p/19743861">《为什么你要写博客？》</a></strong> 之后，我更加坚定了搭建博客的想法。</p>

<p>于是在期末结束后，我开始寻找教程，开始搭建自己的博客。博客的第一个版本，我使用的是 <strong><a href="https://github.com/cnfeat">@cnfeat</a></strong> 的 <strong><a href="https://www.cnfeat.com/blog/2014/05/11/how-to-build-a-blog/">《简明 GitHub Pages 与 jekyll 教程》</a></strong> 及配套模板。个人认为教程写的很好，按照教程我一步步搭好了博客。然而这一版博客还没开始用，我就想换模板了，原因是觉得美观上少点东西。</p>

<p>于是我找到了另一个，也是博客使用的模板： <strong><a href="https://github.com/Huxpro">@Hux</a><a href="https://github.com/Huxpro/huxblog-boilerplate">的博客模板</a></strong>。谁知这一换模板，诸多问题接踵而至，导致原本三天可以搞定的事一星期才解决（当然中间弃疗去摸了好几天的鱼）。具体遇到的问题会在详细步骤中提到。</p>

<p>历经千辛万苦，在一个平静的下午，终于把 我的个人博客 —— <strong><a href="https://mikelyou.com">mikelyou.com</a></strong> 搭建成功了。</p>

<p>这是博客里的第一篇文章，初次与这个世界见面，让我们大喊：<code class="highlighter-rouge">Hello, world!</code></p>

<h2 id="相关概念与工具">相关概念与工具</h2>

<p>在讲搭建博客的具体步骤前，弄清楚一些概念会有所帮助。在搭建博客的过程中会用到多个工具，在这里简单列举一下。如果看不懂可以跳过这部分，直接前往 <strong><a href="#搭建博客的完整过程">#搭建博客的完整过程 →</a></strong>，在实际搭建过程中出现疑惑再回来看。</p>

<h6 id="什么是域名dns-和-ip">什么是域名、DNS 和 IP</h6>

<ul>
  <li>
    <p><strong>域名</strong> 就是我们常见的<code class="highlighter-rouge">www.baidu.com</code>或其他后缀的一串网址，其类似于现实生活中一家店铺的名字，比如“张三烧烤”（我瞎编的）。</p>
  </li>
  <li>
    <p><strong>IP</strong> 是形如<code class="highlighter-rouge">208.80.152.2</code>（wiki的IP）的一串字符，是网站的真正地址。好比只知道“张三烧烤”这家店的名字并不能带你走到店里，你需要知道它的具体地址，比如“第五大道269号”（也是瞎编的）。</p>
  </li>
  <li>
    <p><strong>DNS</strong> 是将域名和IP连接起来的东西。好比地图册，可以告诉我们“张三烧烤”的具体地址是“第五大道269号”。</p>
  </li>
  <li>
    <p>想了解更详细的内容可以参考 <a href="https://www.jianshu.com/p/6323a4f0ada4">《域名、DNS、IP地址的对应关系》</a>。</p>
  </li>
</ul>

<h6 id="什么是rubygem-和-jekyll">什么是ruby、gem 和 jekyll</h6>

<ul>
  <li>
    <p><strong><code class="highlighter-rouge">ruby</code></strong> 是一种脚本语言。</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">ruby gem</code>是用<code class="highlighter-rouge">ruby</code>语言写的一个“程序”，简称 <strong><code class="highlighter-rouge">gem</code></strong> （<code class="highlighter-rouge">ruby 1.9.2</code>及其以上是已经默认安装了<code class="highlighter-rouge">ruby gem</code>的）。</p>
  </li>
  <li>
    <p><strong><code class="highlighter-rouge">jekyll</code></strong> 是基于<code class="highlighter-rouge">ruby</code>的博客生成“软件”，需要在安装<code class="highlighter-rouge">ruby</code>后通过<code class="highlighter-rouge">gem</code>命令安装。</p>
  </li>
</ul>

<p>目前常见的博客搭建有两种：一种是 GitHub+jekyll，另一种是GitHub+Hexo。本博客使用前一种 GitHub+jekyll 方法，也只讨论这种方法。</p>

<p><strong>重要</strong> ：在 GitHub 上<code class="highlighter-rouge">fork</code>喜欢的<code class="highlighter-rouge">jekyll</code>模板后，博客内容实际上还未生成，此时访问<code class="highlighter-rouge">username.github.io</code>只会看到 GitHub Pages 的 <code class="highlighter-rouge">“Site Not Found”</code> 。我们需要将<code class="highlighter-rouge">repository</code>给<code class="highlighter-rouge">clown</code>到本地，并使用<code class="highlighter-rouge">jekyll</code>运行，产生“<code class="highlighter-rouge">_site</code>”文件夹，这个文件夹里的内容才是真正显示在博客上的。（我使用的前一个模板没有用到<code class="highlighter-rouge">jekyll</code>，这便是换模板后的问题来源。真让人头大。）</p>

<h6 id="购买的域名和github-pages的关系">购买的域名和GitHub Pages的关系</h6>

<p>我们的博客托管在GitHub Pages，也就是<code class="highlighter-rouge">username.github.io</code>这个仓库（repository）中，而我们购买的域名如<code class="highlighter-rouge">whatever.com</code>只是一个网址，当我们在浏览器中输入<code class="highlighter-rouge">whatever.com</code>时，由于 DNS 将二者关联起来，网页会直接跳转至我们的博客，也是我们的仓库<code class="highlighter-rouge">username.github.io</code>，只不过浏览器中显示的还是<code class="highlighter-rouge">whatever.com</code>。</p>

<h6 id="需要安装以下工具">需要安装以下工具：</h6>

<ul>
  <li>我的系统 <code class="highlighter-rouge">win10 x64</code></li>
  <li><code class="highlighter-rouge">ruby 2.6.5</code></li>
  <li><code class="highlighter-rouge">gem 3.0.3</code></li>
  <li><code class="highlighter-rouge">jekyll 4.0.0</code></li>
</ul>

<h6 id="需要注册以下账户">需要注册以下账户：</h6>

<ul>
  <li>GitHub账户</li>
  <li>在域名商的账户（如 GoDaddy），用于购买域名</li>
  <li>DNS 服务商账户（如 HE），用于使用 DNS 服务</li>
  <li><del>Steam 账户，用于搞不定时放松心情</del></li>
</ul>

<p><strong>注意：</strong> 记得妥善保存账号和密码。</p>

<h6 id="准备开始">准备开始</h6>
<p><strong>搭建博客会需要一点耐心和一点钻研精神</strong>。在这个过程中如果卡住了，百度一下别人有没有出现过类似的问题，检查一下自己有没有操作错误，善用 “重头再来法” 和 “摸鱼放松法” 。</p>

<p>另外，<strong>建议在你平时学习的地方进行这个过程</strong>，坐在图书馆会比坐在沙发上效率百倍。</p>

<p>如果你已经做好了时间和心理的准备，就开始搭建你自己的第一个博客吧。冲鸭~</p>

<h2 id="搭建博客的完整过程">搭建博客的完整过程</h2>

<p>我建议在开始所有操作之前，打开一个记事本或笔记软件，把所有用到的网址、内容、参考文章统统记下来，害怕泄露隐私就写在纸上，以防忘记。无论是什么东西，忘记了都很麻烦。</p>

<p>博客的搭建主要参考了 <strong><a href="https://github.com/cnfeat">@陈素封cnfeat</a></strong> 的 <strong><a href="https://www.cnfeat.com/blog/2014/05/11/how-to-build-a-blog/">《简明 GitHub Pages与 jekyll 教程》</a></strong> 以及 <strong><a href="https://github.com/CasualMing">@无心CasualMing</a></strong> 的 <strong><a href="https://wuxin.netlify.com/passages/begin/2017-5-24-jekyll%E5%AE%89%E8%A3%85%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/">《jekyll安装》</a></strong> 两篇教程， 使用了 <strong><a href="https://github.com/Huxpro">@黄玄Hux</a></strong> 的 <strong><a href="https://github.com/Huxpro/huxblog-boilerplate">博客模板</a></strong>。</p>

<p>接下来是搭建博客的详细步骤：</p>

<h6 id="1-购买域名">1. 购买域名：</h6>
<p>去域名商购买域名。我是在域名商  <del>去他爹</del>  <strong><a href="https://www.godaddy.com">GoDaddy</a></strong>  购买的。购买过程很简单，关键在于想好你的域名叫什么；隐私保护通常不需要购买。参考 cnfeat的教程。</p>

<h6 id="2-注册dns服务">2. 注册DNS服务：</h6>
<p>去 DNS 服务商注册 DNS 服务。广受好评的有国内服务商 <strong><a href="http://www.dnspod.cn">DNSpod</a></strong> 和国外服务商 <strong><a href="https://ipv6.he.net">HE</a></strong>。DNSpod 的使用参考 cnfeat的教程，HE 的使用参考这篇教程：<strong><a href="https://www.ancii.com/aqz5yz5ad/">《HE的使用教程》</a></strong>。这一步先注册，具体设置看后面。</p>

<h6 id="3-安装nodejs和git">3. 安装<code class="highlighter-rouge">Node.js</code>和<code class="highlighter-rouge">Git</code>：</h6>
<p>请直接参考 cnfeat的教程。</p>

<h6 id="4-注册github账户">4. 注册GitHub账户：</h6>
<p>前往 <strong><a href="https://github.com">GitHub官网</a></strong>。取个好名字，不要中二，将来仓库的名字必须是<code class="highlighter-rouge">你的用户名.github.io</code>。</p>

<h6 id="5-配置ssh-keys">5. 配置<code class="highlighter-rouge">SSH Keys</code>：</h6>
<p>参考 cnfeat的教程。其教程中的代码都是在<code class="highlighter-rouge">cmd</code>中输入的，前面的<code class="highlighter-rouge">$ </code>不是我们需要输入的内容。不懂如何使用 cmd 的可以先看看 <strong><a href="https://lellansin.wordpress.com/2012/12/15/cmd%E5%BA%94%E7%94%A8%E5%9F%BA%E7%A1%80-%E6%89%AB%E7%9B%B2%E6%95%99%E7%A8%8B/">《cmd应用基础扫盲教程》</a></strong>。</p>

<h6 id="6-将独立域名与-github-pages-的空间绑定">6. 将独立域名与 GitHub Pages 的空间绑定</h6>

<ul>
  <li>
    <p><strong>DNS 设置</strong>：前往DNS服务商填写配置，配置方法分别参考 cnfeat的教程 和 HE的使用教程。（HE似乎不能添加<code class="highlighter-rouge">·</code>记录，就改填<code class="highlighter-rouge">@</code>记录吧。<code class="highlighter-rouge">A</code>记录是GitHub Pages的IP, <code class="highlighter-rouge">NS</code>记录是DNS服务商自己提供的网址，<code class="highlighter-rouge">CHNAME</code>记录是形如<code class="highlighter-rouge">username.github.io</code>的你的博客仓库, <code class="highlighter-rouge">TTL</code>都设置成<code class="highlighter-rouge">86400</code>就没问题。没反应就清理一下缓存。）</p>
  </li>
  <li>
    <p><strong>Nameservers(NS) 的设置</strong>：去域名商的网站，找到名为 <code class="highlighter-rouge">Nameservers(NS)</code> 的设置，将其原有内容删除，修改为 DNS 服务商提供的地址。设置方法分别参考 cnfeat的教程 和 HE的使用教程。</p>
  </li>
  <li>
    <p><strong>GitHub仓库设置</strong>：在GitHub仓库填写<code class="highlighter-rouge">CHANME.md</code>文件，或在设置中填写个性化域名，即你购买的形如<code class="highlighter-rouge">whatever.com</code>的域名。</p>
  </li>
</ul>

<p>似乎必须上面三项都需要设置正确，才可以访问博客。从设置到生效可能 <strong>会有延迟</strong>，不要着急。<strong>清理浏览器缓存</strong> 有时会有奇效（我就在这卡了很久，清理缓存瞬间解决）。</p>

<h6 id="7-使用-github-pages-建立博客">7. 使用 GitHub Pages 建立博客：</h6>
<p>大佬可以自己写，不佬就直接 fork 别人的模板啦，方法参考 cnfeat的教程（这里网址写的很容易看错，多看几遍）。</p>

<p>（<strong>！</strong> 就在这时我突然决定换模板，随后遇到诸多问题，怀疑人生好几天，然后发现还少了后面两步。）</p>

<h6 id="8-安装ruby包括rubygem">8. 安装<code class="highlighter-rouge">ruby</code>（包括<code class="highlighter-rouge">rubygem</code>）：</h6>
<p>这里主要参考 @CasualMing 的 <strong><a href="https://wuxin.netlify.com/passages/begin/2017-5-24-jekyll%E5%AE%89%E8%A3%85%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/">《jekyll搭建》</a></strong> 以及 <strong><a href="http://jekyllcn.com/">jekyll官方主页</a></strong>。</p>

<p>这一部分可能会有点乱，因为每个工具都有不同的版本，彼此之间还有支持的需求。我的建议是：参考上面这篇教程的方法，去<a href="https://rubyinstaller.org/downloads/">官网</a> 下载安装最新的<code class="highlighter-rouge">Ruby+Devkit</code>；然后直接尝试安装<code class="highlighter-rouge">jekyll</code>，如果哪个工具版本不支持会有提示，然后就相应的更新。善用 “反复重装法” 。</p>

<p>在国内gem的源似乎被墙，可参考这篇文章：<a href="https://dailc.github.io/2016/10/29/jekyllbuild.html">《jekyll博客搭建之艰辛之路》</a>。</p>

<p><strong>注意：</strong> 安装的软件和博客仓库最好放在 <strong>不含空格的英文路径</strong>。如果路径中有<code class="highlighter-rouge">Program Files</code>这样含空格的文件夹，在使用<code class="highlighter-rouge">cmd</code>命令时需要加括号<code class="highlighter-rouge">"Program Files"</code>，参考 <a href="https://blog.csdn.net/aidenliu/article/details/5390113">《CMD命令进入某个目录》</a>。</p>

<p><strong>至此，博客的基础搭建工作完成。</strong> 不过现在博客还无法访问，因为其内容还未生成，我们需要进行一次 <a href="#如何更新博客">#更新博客</a>操作 生成内容。已经进行到这里的你只差最后一步了，加油鸭 ~</p>

<h2 id="如何更新博客">如何更新博客</h2>

<p>现在博客已经搭建成功，我们已经可以通过在网页编辑<code class="highlighter-rouge">username.github.io</code>仓库内的内容来更新博客了（可以尝试一下）。但是大家一般不推荐在网页端操作，而是采用下面的方法：<strong>通过搭建本地服务器，在修改的同时随时预览网页，确认无误后一次性提交更新。</strong> 这样的好处在于，可以及时预览编辑产生的效果，且不会产生大量修改记录。第一次可能会觉得很复杂，但熟悉操作后就会比在网页操作方便很多。</p>

<p>具体步骤如下：</p>

<h6 id="1-将仓库clown至本地">1. 将仓库clown至本地</h6>
<p>使用 <strong><a href="https://desktop.github.com">GitHub Desktop</a></strong> 将仓库（也就是博客模板）clown至本地。参考 cnfeat的教程。</p>

<h6 id="2-使用jekyll搭建本地服务器">2. 使用<code class="highlighter-rouge">jekyll</code>搭建本地服务器</h6>
<p>这一步可参考 <a href="https://wuxin.netlify.com/passages/begin/2017-5-24-jekyll%E5%AE%89%E8%A3%85%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/#%E5%AE%89%E8%A3%85jekyll">《jekyll搭建》 #安装jekyll</a> 。</p>

<p>我的仓库位置在<code class="highlighter-rouge">E:\GitHub\mikelyou.github.io</code>，打开<code class="highlighter-rouge">cmd</code>并输入以下几行命令：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>E:					#进入E盘
cd E:\GitHub\mikelyou.github.io		#进入仓库所在目录
jekyll serve				#开服，网址会写在下面，我的是`http://127.0.0.1:4000`

Ctrl+C					#关服
</pre></td></tr></tbody></table></code></pre></div></div>

<h6 id="3-修改或添加内容">3. 修改或添加内容</h6>
<p>修改本地文件，然后在本地服务器生产的网页就可以看到改动。我们可以反复修改直至满意。</p>

<p>修改和添加内容个人觉得很简单，就是在文件之间抄一抄改一改。好的模板都会有详细的说明文件<code class="highlighter-rouge">README.md</code>，并会在相关代码出加有注释，不(ai)予(mo)赘(neng)述(zhu)。</p>

<p>这里有 <strong><a href="https://help.github.com/cn/github/writing-on-github/basic-writing-and-formatting-syntax#ignoring-markdown-formatting">GitHub Markdown 语法</a></strong> 的官方帮助页面。</p>

<p>关于仓库中各个文件夹是干什么用的， <strong><a href="http://jekyllcn.com/docs/structure/">jekyll官方文档</a></strong> 有详细说明。</p>

<h6 id="4-上传更新">4. 上传更新</h6>
<p>保存本地文件的修改，关闭服务器，在 GitHub Desktop 一次性上传所有更新，可以记录一下改了哪里。然后我们的博客本体就更新啦。</p>

<h2 id="后记">后记</h2>

<p>本人是学材料专业的，这些玩意儿真的完全不懂，好在以前学过基础的编程，能看得懂简单的配置文件。</p>

<p>虽然思想上有所准备，但搭建博客的过程还是比我想象的更曲折一点。有句话说，“专业的事，留给专业的人做”，而能够利用别人专业的成果，做自己要做的事，则是我等需要具备的能力。搭建博客的过程着实让我学到了很多，希望在今后更新博客的过程中，依然可以持续不断的学习。</p>

<p>欢迎交流和指点。</p>

<p>2019年12月27日 于Science图书馆</p>

<p>（文章主体框架基本确定，文中细节近期仍可能进行修改。）</p>

<h2 id="致谢">致谢</h2>

<p>特别感谢 <strong><a href="https://github.com/Huxpro">@黄玄Hux</a></strong> 精致详细的博客模板，以及 <strong><a href="https://github.com/cnfeat">@陈素封cnfeat</a></strong> 与 <strong><a href="https://github.com/CasualMing">@无心CasualMing</a></strong> 的教程。</p>

<p>这个博客的成功搭建，离不开各位陌生大佬们的帮助，在这里向大佬们表示感谢。建立此博客以及撰写此文所用到的参考资料都在下面列出。本人学识和精力有限，如有错误，欢迎斧正。</p>

<h6 id="参考模板和教程">参考模板和教程：</h6>

<ul>
  <li>Hux的模板和使用说明：
    <ul>
      <li><strong><a href="https://github.com/Huxpro/huxblog-boilerplate">HuxBlog Boilerplate</a></strong> （使用说明：<a href="https://github.com/Huxpro/huxblog-boilerplate/blob/master/README.zh.md">README.zh.md</a> ）</li>
    </ul>
  </li>
  <li>
    <p>cnfeat模板及教程：</p>

    <ul>
      <li><a href="https://zhuanlan.zhihu.com/p/19743861">为什么你要写博客？</a></li>
      <li><a href="https://github.com/cnfeat/blog.io">cnfeat/blog.io: 简单直接可用博客模板</a></li>
      <li><strong><a href="https://www.cnfeat.com/blog/2014/05/11/how-to-build-a-blog/">如何搭建一个独立博客——简明 GitHub Pages与 jekyll 教程</a></strong></li>
    </ul>
  </li>
  <li>ruby gem 与 jekyll 的安装和使用
    <ul>
      <li>CasualMing 的 <strong><a href="https://wuxin.netlify.com/passages/begin/2017-5-24-jekyll%E5%AE%89%E8%A3%85%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/">jekyll安装及遇到的问题</a></strong></li>
      <li><a href="https://dailc.github.io/2016/10/29/jekyllbuild.html">jekyll博客搭建之艰辛之路(基本概念和处理报错)</a></li>
    </ul>
  </li>
  <li>各官方网站：
    <ul>
      <li><a href="https://www.godaddy.com">GoDaddy</a></li>
      <li><a href="http://www.dnspod.cn">DNSpod</a></li>
      <li><a href="https://ipv6.he.net">HE</a></li>
      <li><a href="https://github.com">GitHub</a></li>
      <li><a href="http://jekyllcn.com/">jekyll</a></li>
    </ul>
  </li>
  <li>其他参考
    <ul>
      <li><a href="https://help.github.com/cn/github/writing-on-github/basic-writing-and-formatting-syntax#ignoring-markdown-formatting">GitHub Markdown语法</a></li>
      <li><a href="https://lellansin.wordpress.com/2012/12/15/cmd%E5%BA%94%E7%94%A8%E5%9F%BA%E7%A1%80-%E6%89%AB%E7%9B%B2%E6%95%99%E7%A8%8B/">cmd应用基础扫盲教程</a> 和 <a href="https://blog.csdn.net/aidenliu/article/details/5390113">CMD命令进入某个目录</a></li>
      <li><a href="https://www.jianshu.com/p/6323a4f0ada4">域名、DNS、IP地址的对应关系</a></li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>本文为 Mike Lyou 本人原创，但文中内容多有借鉴上述参考模板和教程。本文谢绝转载。</p>
</blockquote>
:ET