I"5<!-- more -->

<blockquote>
  <p>Note: From this section(#10), the reference is no longer <a href="https://github.com/jackfrued/Python-100-Days">Python-100-Days</a>, but <strong><a href="https://github.com/ethan-funny/explore-python">ethan-funny/explore-python</a></strong>. This two series may overlap. Depending on the necessity, these two series may be merged into one, and old posts may be deleted.</p>
</blockquote>

<h2 class="no_toc" id="catalog">Catalog：</h2>

<ul id="markdown-toc">
  <li><a href="#高阶函数" id="markdown-toc-高阶函数">高阶函数</a></li>
  <li><a href="#匿名函数" id="markdown-toc-匿名函数">匿名函数</a></li>
  <li><a href="#mapreducefilter" id="markdown-toc-mapreducefilter">map/reduce/filter</a></li>
  <li><a href="#闭包" id="markdown-toc-闭包">闭包</a></li>
  <li><a href="#装饰器" id="markdown-toc-装饰器">装饰器</a></li>
  <li><a href="#partial-函数" id="markdown-toc-partial-函数">partial 函数</a></li>
</ul>

<p><strong>函数式编程（functional programming</strong> 是一种编程范式（Programming paradigm），或者说编程模式，比如我们常见的过程式编程是一种编程范式，面向对象编程又是另一种编程范式。</p>

<p>函数式编程的一大特性就是：可以把函数当成变量来使用，比如将函数赋值给其他变量、把函数作为参数传递给其他函数、函数的返回值也可以是一个函数等等。</p>

<p>Python 不是纯函数式编程语言，但它对函数式编程提供了一些支持。本章主要介绍 Python 中的函数式编程，主要包括以下几个方面：</p>

<h2 id="高阶函数">高阶函数</h2>

<p>在函数式编程中，我们可以将函数当作变量一样自由使用。一个函数接收另一个函数作为参数，这种函数称之为高阶函数（Higher-order Functions）。</p>

<h2 id="匿名函数">匿名函数</h2>

<p>当我们需要一些临时性的、小巧的函数，匿名函数可以满足我们的需求。</p>

<p>Python 提供了一个关键字 lambda，让我们可以创建一个匿名函数，也就是没有名称的函数。它的形式如下：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>lambda 参数: 表达式
</pre></td></tr></tbody></table></code></pre></div></div>

<p>匿名函数的应用形式如下：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">x</span><span class="p">)(</span><span class="mi">8</span><span class="p">)</span>
<span class="mi">16</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>匿名函数在高阶函数中可以使表达更为简洁。举个栗子：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">arr</span> <span class="o">=</span> <span class="n">func</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>匿名函数本质上是一个函数，没有函数名称，因此使用匿名函数不用担心函数名冲突</p>

<h2 id="mapreducefilter">map/reduce/filter</h2>

<h2 id="闭包">闭包</h2>

<h2 id="装饰器">装饰器</h2>

<h2 id="partial-函数">partial 函数</h2>

<hr />
<blockquote>
  <p>Statement:This python learning series are posted only for personal studies and communication. The whole series are not allowed to be reproduced unles otherwise indicated. I do not own copyright of some of the content. If any post accidentally infringes your copyright, it will be removed shortly after being informed. View <strong><a href="https://mikelyou.com/2020/01/02/python-learning-00-readme/">python-learning-readme</a></strong> for more information.</p>
</blockquote>

<blockquote>
  <p>Note: From this section(#10), the reference is no longer <a href="https://github.com/jackfrued/Python-100-Days">Python-100-Days</a>, but <strong><a href="https://github.com/ethan-funny/explore-python">ethan-funny/explore-python</a></strong>. This two series may overlap. Depending on the necessity, these two series may be merged into one, and old posts may be deleted.</p>
</blockquote>
:ET