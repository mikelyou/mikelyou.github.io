I"{<!-- more -->

<blockquote>
  <p>Note: From this section(#10), the main reference is no longer <a href="https://github.com/jackfrued/Python-100-Days">Python-100-Days</a>, but <strong><a href="https://github.com/ethan-funny/explore-python">ethan-funny/explore-python</a></strong>. This two series may overlap. Depending on the necessity, these two series may be merged into one, and old posts may be deleted.</p>
</blockquote>

<h2 class="no_toc" id="catalog">Catalog：</h2>

<ul id="markdown-toc">
  <li><a href="#常用数据类型" id="markdown-toc-常用数据类型">常用数据类型</a></li>
  <li><a href="#通用的序列操作" id="markdown-toc-通用的序列操作">通用的序列操作</a>    <ul>
      <li><a href="#索引" id="markdown-toc-索引">索引</a></li>
      <li><a href="#分片" id="markdown-toc-分片">分片</a>        <ul>
          <li><a href="#访问最后几个元素" id="markdown-toc-访问最后几个元素">访问最后几个元素</a></li>
          <li><a href="#使用步长" id="markdown-toc-使用步长">使用步长</a></li>
        </ul>
      </li>
      <li><a href="#加" id="markdown-toc-加">加</a></li>
      <li><a href="#乘" id="markdown-toc-乘">乘</a></li>
      <li><a href="#in" id="markdown-toc-in">in</a></li>
    </ul>
  </li>
  <li><a href="#列表" id="markdown-toc-列表">列表</a>    <ul>
      <li><a href="#index" id="markdown-toc-index">index</a></li>
      <li><a href="#count" id="markdown-toc-count">count</a></li>
      <li><a href="#append" id="markdown-toc-append">append</a></li>
      <li><a href="#extend" id="markdown-toc-extend">extend</a></li>
      <li><a href="#insert" id="markdown-toc-insert">insert</a></li>
      <li><a href="#pop" id="markdown-toc-pop">pop</a></li>
      <li><a href="#remove" id="markdown-toc-remove">remove</a></li>
      <li><a href="#reverse" id="markdown-toc-reverse">reverse</a></li>
      <li><a href="#sort" id="markdown-toc-sort">sort</a></li>
    </ul>
  </li>
  <li><a href="#元组" id="markdown-toc-元组">元组</a>    <ul>
      <li><a href="#空元组" id="markdown-toc-空元组">空元组</a></li>
      <li><a href="#一个值的元组" id="markdown-toc-一个值的元组">一个值的元组</a></li>
      <li><a href="#元组操作" id="markdown-toc-元组操作">元组操作</a></li>
    </ul>
  </li>
  <li><a href="#字符串" id="markdown-toc-字符串">字符串</a>    <ul>
      <li><a href="#find" id="markdown-toc-find">find</a></li>
      <li><a href="#split" id="markdown-toc-split">split</a></li>
      <li><a href="#join" id="markdown-toc-join">join</a></li>
      <li><a href="#strip" id="markdown-toc-strip">strip</a></li>
      <li><a href="#replace" id="markdown-toc-replace">replace</a></li>
      <li><a href="#translate" id="markdown-toc-translate">translate</a></li>
      <li><a href="#lowerupper" id="markdown-toc-lowerupper">lower/upper</a></li>
    </ul>
  </li>
  <li><a href="#字典" id="markdown-toc-字典">字典</a></li>
  <li><a href="#集合" id="markdown-toc-集合">集合</a>    <ul>
      <li><a href="#创建集合" id="markdown-toc-创建集合">创建集合</a></li>
      <li><a href="#遍历集合" id="markdown-toc-遍历集合">遍历集合</a></li>
      <li><a href="#添加元素" id="markdown-toc-添加元素">添加元素</a></li>
      <li><a href="#删除元素" id="markdown-toc-删除元素">删除元素</a></li>
      <li><a href="#交集并集差集" id="markdown-toc-交集并集差集">交集/并集/差集</a></li>
    </ul>
  </li>
</ul>

<h2 id="常用数据类型">常用数据类型</h2>

<p>本节将介绍 Python 中常用的几种数据类型：</p>

<ul>
  <li>列表 List</li>
  <li>元组 Tuple</li>
  <li>字符串 String</li>
  <li>字典 Dict</li>
  <li>集合 Set</li>
</ul>

<p>其中，</p>
<ul>
  <li>
    <p>列表、元组和字符串都属于 <strong>序列</strong> 类型。<br />
序列（Sequence）是 Python 中最基本的数据结构，其特点是根据索引（index）来获取序列中的元素。序列类型的变量可以进行一些通用的操作。</p>
  </li>
  <li>
    <p>字典属于 <strong>映射</strong> 类型，每个元素由键（key）和值（value）构成；</p>
  </li>
  <li>
    <p>集合是一种特殊的类型，它所包含的元素是不重复的。</p>
  </li>
</ul>

<h2 id="通用的序列操作">通用的序列操作</h2>

<h4 id="索引">索引</h4>

<p>序列中的元素可以通过索引获取，索引从 0 开始，-1 则代表序列的最后一个元素，-2 代表倒数第二个元素，以此类推。如下：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>   <span class="c1"># 列表
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">nums</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">nums</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>                 <span class="c1"># 索引 -1 表示最后一个元素
</span><span class="mi">5</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="s">'abcdef'</span>             <span class="c1"># 字符串
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="s">'a'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="s">'b'</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>            <span class="c1"># 元组
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="mi">2</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="分片">分片</h4>

<p><strong>索引</strong> 用于获取序列中的单个元素，而 <strong>分片</strong> 则用于获取序列的部分元素。分片操作需要提供两个索引作为边界，中间用冒号相隔。</p>

<p>这里需要 <strong>特别注意</strong> 的是，分片有两个索引，<strong>第 1 个索引的元素是包含在内的，而第 2 个元素的索引则不包含在内</strong>。比如：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">]</span>                   <span class="c1"># 列表分片
</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span>
<span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="s">'hello, world'</span>             <span class="c1"># 字符串分片
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span>
<span class="s">'hello'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>           <span class="c1"># 元组分片
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span>
<span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h6 id="访问最后几个元素">访问最后几个元素</h6>

<p>假设需要访问序列的最后 3 个元素，最好的方法是这样：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">:]</span>
<span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">5</span><span class="p">:]</span>
<span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>也就是说，如果希望分片包含最后一个元素，可将第 2 个索引置为空。</p>

<p>如果要复制整个序列，可以将两个索引都置为空：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">nums</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[:]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">nums</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h6 id="使用步长">使用步长</h6>

<p>使用分片的时候，步长默认是 1，即逐个访问，我们也可以自定义步长，比如：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">:</span><span class="mi">1</span><span class="p">]</span>    <span class="c1"># 步长为 1，不写也可以，默认为 1
</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">:</span><span class="mi">2</span><span class="p">]</span>    <span class="c1"># 步长为 2，取出 numbers[0], numbers[2]
</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[::</span><span class="mi">3</span><span class="p">]</span>      <span class="c1"># 等价于 numbers[0:8:3]，取出索引为 0, 3, 6 的元素
</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">7</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>另外，步长也可以是负数，表示从右到左取元素：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<span class="p">[]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>       <span class="c1"># 取出索引为 4, 3, 2, 1 的元素
</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>       <span class="c1"># 取出索引为 4, 2 的元素
</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>         <span class="c1"># 从右到左取出所有元素
</span><span class="p">[</span><span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[::</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>         <span class="c1"># 取出索引为 7, 5, 3, 1 的元素
</span><span class="p">[</span><span class="mi">8</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[</span><span class="mi">6</span><span class="p">::</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>        <span class="c1"># 取出索引为 6, 4, 2, 0 的元素
</span><span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="p">[:</span><span class="mi">6</span><span class="p">:</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>        <span class="c1"># 取出索引为 7 的元素
</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="加">加</h4>
<p>序列可以进行「加法」操作，如下：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>     <span class="c1"># 「加法」效果其实就是连接在一起
</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
<span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'hello, '</span> <span class="o">+</span> <span class="s">'world!'</span>
<span class="s">'hello, world!'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">+</span> <span class="s">'abc'</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">TypeError</span><span class="p">:</span> <span class="n">can</span> <span class="n">only</span> <span class="n">concatenate</span> <span class="nb">list</span> <span class="p">(</span><span class="ow">not</span> <span class="s">"str"</span><span class="p">)</span> <span class="n">to</span> <span class="nb">list</span>
<span class="err">这里需要注意的是：两种相同类型的序列才能「加法」操作。</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="乘">乘</h4>
<p>序列可以进行「乘法」操作，比如：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="s">'abc'</span> <span class="o">*</span> <span class="mi">3</span>
<span class="s">'abcabcabc'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="in">in</h4>
<p>为了检查一个值是否在序列中，可以使用 in 运算符，比如：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="s">'he'</span> <span class="ow">in</span> <span class="s">'hello'</span>
<span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'hl'</span> <span class="ow">in</span> <span class="s">'hello'</span>
<span class="bp">False</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">10</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span>
<span class="bp">True</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="列表">列表</h2>

<p>字符串和元组是不可变的，而列表是可变（mutable）的，可以对它进行随意修改。我们还可以将字符串和元组转换成一个列表，只需使用 <code class="highlighter-rouge">list</code> 函数，比如：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="s">'hello'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="p">[</span><span class="s">'h'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">,</span> <span class="s">'l'</span><span class="p">,</span> <span class="s">'l'</span><span class="p">,</span> <span class="s">'o'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>本文主要介绍常用的列表方法。</p>

<h4 id="index">index</h4>

<p>index 方法用于从列表中找出某个元素的位置，如果有多个相同的元素，则返回第一个元素的位置。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>        <span class="c1"># 列表有两个 5，返回第一个元素的位置
</span><span class="mi">4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="s">'hello'</span><span class="p">,</span> <span class="s">'world'</span><span class="p">,</span> <span class="s">'you'</span><span class="p">,</span> <span class="s">'me'</span><span class="p">,</span> <span class="s">'he'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">words</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s">'me'</span><span class="p">)</span>
<span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">words</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s">'her'</span><span class="p">)</span>       <span class="c1"># 如果没找到元素，则会抛出异常
</span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">ValueError</span><span class="p">:</span> <span class="s">'her'</span> <span class="ow">is</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="count">count</h4>

<p>count 方法用于统计某个元素在列表中出现的次数。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>   <span class="c1"># 出现一次
</span><span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>   <span class="c1"># 出现了两次
</span><span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>   <span class="c1"># 没有该元素，返回 0
</span><span class="mi">0</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="append">append</h4>

<p>append 方法用于在列表末尾增加新的元素。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>         <span class="c1"># 增加 8 这个元素
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">])</span>   <span class="c1"># 增加 [9, 10] 这个元素
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="p">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">]]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="extend">extend</h4>

<p>extend 方法将一个新列表的元素添加到原列表中。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">TypeError</span><span class="p">:</span> <span class="s">'int'</span> <span class="nb">object</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">iterable</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="o">.</span><span class="n">extend</span><span class="p">([</span><span class="mi">3</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>注意到，虽然 append 和 extend 可接收一个列表作为参数，但是 append 方法是将其作为一个元素添加到列表中，而 extend 则是将新列表的元素逐个添加到原列表中。</p>

<h4 id="insert">insert</h4>

<p>insert 方法用于将某个元素添加到某个位置。括号内第一个值为索引，第二个为要插入的元素。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="pop">pop</h4>

<p>pop 方法用于移除列表中的一个元素（默认是最后一个），并且返回该元素的值。如果括号中有值，则为索引。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
<span class="mi">6</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="mi">4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="remove">remove</h4>

<p>remove 方法用于移除列表中的某个匹配元素，如果有多个匹配，则移除第一个。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>          <span class="c1"># 有两个 5，移除第 1 个
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>          <span class="c1"># 没有匹配的元素，抛出异常
</span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">ValueError</span><span class="p">:</span> <span class="nb">list</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">x</span><span class="p">):</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="reverse">reverse</h4>

<p>reverse 方法用于将列表中的元素进行反转。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">numbers</span>
<span class="p">[</span><span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="sort">sort</h4>

<p>sort 方法用于对列表进行排序，<strong>注意</strong> ：该方法会改变原来的列表，而不是返回新的排序列表，另外，sort 方法的返回值是空。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">==</span> <span class="bp">None</span>         <span class="c1"># 返回值为空
</span><span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>    <span class="c1"># 原列表已经发生改变
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>如果我们不想改变原列表，而是希望返回一个排序后的列表，可以使用 sorted 函数，如下：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>          <span class="c1"># 返回一个排序后的列表
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>         <span class="c1"># 原列表没有改变
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>         <span class="c1"># 这是对原列表排序后的列表
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>注意到，不管是 sort 方法还是 sorted 函数，<strong>默认排序都是升序排序</strong>。如果你想要降序排序，就需要指定排序参数了。比如，对 sort 方法，可以添加一个 reverse 关键字参数，如下：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>    <span class="c1"># 反向排序
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>该参数对 sorted 函数同样适用：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="p">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>除了 reverse 关键字参数，还可以指定 key 关键字参数，它为每个元素创建一个键，然后所有元素按照这个键来排序，比如我们想根据元素的长度来排序：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="p">[</span><span class="s">'ccc'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'bb'</span><span class="p">,</span> <span class="s">'dddd'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="nb">len</span><span class="p">)</span>          <span class="c1"># 使用 len 作为键函数，根据元素长度排序
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span>
<span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'bb'</span><span class="p">,</span> <span class="s">'ccc'</span><span class="p">,</span> <span class="s">'dddd'</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>另外，我们还可以使用 sorted 进行多列（属性）排序。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">students</span> <span class="o">=</span> <span class="p">[</span>
        <span class="p">(</span><span class="s">'john'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">15</span><span class="p">),</span>
        <span class="p">(</span><span class="s">'jane'</span><span class="p">,</span> <span class="s">'A'</span><span class="p">,</span> <span class="mi">12</span><span class="p">),</span>
        <span class="p">(</span><span class="s">'dave'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span>
        <span class="p">(</span><span class="s">'ethan'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
        <span class="p">(</span><span class="s">'peter'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
        <span class="p">(</span><span class="s">'mike'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span>
    <span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="c1"># 对第 3 列排序 (从小到大)
</span><span class="o">&gt;&gt;&gt;</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">students</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">student</span><span class="p">:</span> <span class="n">student</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="p">[(</span><span class="s">'dave'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'jane'</span><span class="p">,</span> <span class="s">'A'</span><span class="p">,</span> <span class="mi">12</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'john'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">15</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'mike'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="mi">16</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'ethan'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'peter'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">20</span><span class="p">)]</span>

<span class="c1"># 对第 2 列排序（从小到大），再对第 3 列从大到小排序
</span><span class="o">&gt;&gt;&gt;</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">students</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">student</span><span class="p">:</span> <span class="p">(</span><span class="n">student</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="o">-</span><span class="n">student</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
<span class="p">[(</span><span class="s">'jane'</span><span class="p">,</span> <span class="s">'A'</span><span class="p">,</span> <span class="mi">12</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'peter'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'john'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">15</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'dave'</span><span class="p">,</span> <span class="s">'B'</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'ethan'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
 <span class="p">(</span><span class="s">'mike'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">,</span> <span class="mi">16</span><span class="p">)]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>如果你想了解更多关于排序的知识，可以参考<a href="https://wiki.python.org/moin/HowTo/Sorting">此文</a>。</p>

<h2 id="元组">元组</h2>

<p>在 Python 中，<strong>元组是一种不可变序列</strong>，它使用圆括号来表示：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>    <span class="c1"># a 是一个元组
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">6</span>         <span class="c1"># 元组是不可变的，不能对它进行赋值操作
</span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">TypeError</span><span class="p">:</span> <span class="s">'tuple'</span> <span class="nb">object</span> <span class="n">does</span> <span class="ow">not</span> <span class="n">support</span> <span class="n">item</span> <span class="n">assignment</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="空元组">空元组</h4>

<p>创建一个空元组可以用没有包含内容的圆括号来表示：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="一个值的元组">一个值的元组</h4>

<p>创建一个值的元组需要在值后面再加一个逗号，这个比较特殊，需要牢牢记住：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">12</span><span class="p">,)</span>   <span class="c1"># 在值后面再加一个逗号
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
<span class="p">(</span><span class="mi">12</span><span class="p">,)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="p">(</span><span class="mi">12</span><span class="p">)</span>    <span class="c1"># 只是使用括号括起来，而没有加逗号，不是元组，本质上是 b = 12
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">b</span>
<span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="o">&lt;</span><span class="nb">type</span> <span class="s">'int'</span><span class="o">&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="元组操作">元组操作</h4>

<p>元组也是一种序列，因此也可以对它进行索引、分片等。由于它是不可变的，因此就没有类似列表的 append, extend, sort 等方法。</p>

<h2 id="字符串">字符串</h2>

<p>字符串也是一种序列，因此，通用的序列操作，比如索引，分片，加法，乘法等对它同样适用。比如：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="s">'hello, '</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>            <span class="c1"># 索引
</span><span class="s">'h'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span>          <span class="c1"># 分片
</span><span class="s">'el'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">+</span> <span class="s">'world'</span>     <span class="c1"># 加法
</span><span class="s">'hello, world'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">*</span> <span class="mi">2</span>           <span class="c1"># 乘法
</span><span class="s">'hello, hello, '</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>但需要注意的是，字符串和元组一样，也是 <strong>不可变</strong> 的，所以你不能对它进行赋值等操作：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="s">'hello'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="s">'ab'</span>    <span class="c1"># 不能对它进行赋值
</span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">TypeError</span><span class="p">:</span> <span class="s">'str'</span> <span class="nb">object</span> <span class="n">does</span> <span class="ow">not</span> <span class="n">support</span> <span class="n">item</span> <span class="n">assignment</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>除了通用的序列操作，字符串还有自己的方法，比如 join, lower, upper 等。字符串的方法特别多，这里只介绍一些常用的方法。</p>

<h4 id="find">find</h4>

<p>find 方法用于在一个字符串中查找子串，它返回子串所在位置的最左端索引，如果没有找到，则返回 -1。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span> <span class="o">=</span> <span class="s">"to be or not to be, that is a question"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">'be'</span><span class="p">)</span>            <span class="c1"># 返回 'b' 所在的位置，即 3
</span><span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">'be'</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>         <span class="c1"># 指定从起始位置开始找，找到的是第 2 个 'be'
</span><span class="mi">16</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">'be'</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>      <span class="c1"># 指定起始位置和终点位置，没有找到，返回 -1
</span><span class="o">-</span><span class="mi">1</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="split">split</h4>

<p>split 方法用于将字符串分割成序列。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="s">'/user/bin/ssh'</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">)</span>         <span class="c1"># 使用 '/' 作为分隔符
</span><span class="p">[</span><span class="s">''</span><span class="p">,</span> <span class="s">'user'</span><span class="p">,</span> <span class="s">'bin'</span><span class="p">,</span> <span class="s">'ssh'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'1+2+3+4+5'</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'+'</span><span class="p">)</span>             <span class="c1"># 使用 '+' 作为分隔符
</span><span class="p">[</span><span class="s">'1'</span><span class="p">,</span> <span class="s">'2'</span><span class="p">,</span> <span class="s">'3'</span><span class="p">,</span> <span class="s">'4'</span><span class="p">,</span> <span class="s">'5'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'that    is a   question'</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>  <span class="c1"># 没有提供分割符，默认使用所有空格作为分隔符
</span><span class="p">[</span><span class="s">'that'</span><span class="p">,</span> <span class="s">'is'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'question'</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>需要注意的是，如果不提供分隔符，则默认会使用所有空格作为分隔符（空格、制表符、换行等）。</p>

<h4 id="join">join</h4>

<p>join 方法可以说是 split 的逆方法，它用于将序列中的元素连接起来。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="s">'/'</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">''</span><span class="p">,</span> <span class="s">'user'</span><span class="p">,</span> <span class="s">'bin'</span><span class="p">,</span> <span class="s">'ssh'</span><span class="p">])</span>
<span class="s">'/user/bin/ssh'</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'+'</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">'1'</span><span class="p">,</span> <span class="s">'2'</span><span class="p">,</span> <span class="s">'3'</span><span class="p">,</span> <span class="s">'4'</span><span class="p">,</span> <span class="s">'5'</span><span class="p">])</span>
<span class="s">'1+2+3+4+5'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">' '</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">'that'</span><span class="p">,</span> <span class="s">'is'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'question'</span><span class="p">])</span>
<span class="s">'that is a question'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">''</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">'h'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">,</span> <span class="s">'ll'</span><span class="p">,</span> <span class="s">'o'</span><span class="p">])</span>
<span class="s">'hello'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'+'</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>          <span class="c1"># 不能是数字
</span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">TypeError</span><span class="p">:</span> <span class="n">sequence</span> <span class="n">item</span> <span class="mi">0</span><span class="p">:</span> <span class="n">expected</span> <span class="n">string</span><span class="p">,</span> <span class="nb">int</span> <span class="n">found</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="strip">strip</h4>

<p>strip 方法用于移除字符串左右两侧的空格，但不包括内部，当然也可以指定需要移除的字符串。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="s">'  hello world!   '</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>                <span class="c1"># 移除左右两侧空格
</span><span class="s">'hello world!'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'</span><span class="si">%%%   </span><span class="s">hello world!!!  ####'</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">'</span><span class="si">%#</span><span class="s">'</span><span class="p">)</span>   <span class="c1"># 移除左右两侧的 '%' 或 '#'
</span><span class="s">'   hello world!!!  '</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'</span><span class="si">%%%   </span><span class="s">hello world!!!  ####'</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">'</span><span class="si">%# </span><span class="s">'</span><span class="p">)</span>  <span class="c1"># 移除左右两侧的 '%' 或 '#' 或空格
</span><span class="s">'hello world!!!'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="replace">replace</h4>

<p>replace 方法用于替换字符串中的 <strong>所有</strong> 匹配项。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span> <span class="o">=</span> <span class="s">'To be or not To be, that is a question'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'To'</span><span class="p">,</span> <span class="s">'to'</span><span class="p">)</span>        <span class="c1"># 用 'to' 替换所有的 'To'，返回了一个新的字符串
</span><span class="s">'to be or not to be, that is a question'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span>                            <span class="c1"># 原字符串保持不变
</span><span class="s">'To be or not To be, that is a question'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="translate">translate</h4>

<p>translate 方法和 replace 方法类似，也可以用于替换字符串中的某些部分，但 <strong>translate 方法只处理单个字符</strong>。</p>

<p>translate 方法的使用形式如下：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nb">str</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">table</span><span class="p">[,</span> <span class="n">deletechars</span><span class="p">]);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>其中，table 是一个包含 256 个字符的转换表，可通过 maketrans 方法转换而来，deletechars 是字符串中要过滤的字符集。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">string</span> <span class="kn">import</span> <span class="n">maketrans</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">table</span> <span class="o">=</span> <span class="n">maketrans</span><span class="p">(</span><span class="s">'aeiou'</span><span class="p">,</span> <span class="s">'12345'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span> <span class="o">=</span> <span class="s">'to be or not to be, that is a question'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">table</span><span class="p">)</span>
<span class="s">'t4 b2 4r n4t t4 b2, th1t 3s 1 q52st34n'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span>
<span class="s">'to be or not to be, that is a question'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">motto</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">table</span><span class="p">,</span> <span class="s">'rqu'</span><span class="p">)</span>        <span class="c1"># 移除所有的 'r', 'q', 'u'
</span><span class="s">'t4 b2 4 n4t t4 b2, th1t 3s 1 2st34n'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>可以看到，maketrans 接收两个参数：两个等长的字符串，表示第一个字符串的每个字符用第二个字符串对应位置的字符替代，在上面的例子中，就是 ‘a’ 用 ‘1’ 替代，’e’ 用 ‘2’ 替代，等等，注意，是单个字符的代替，而不是整个字符串的替代。因此，motto 中的 o 都被替换为 4，e 都被替换为 2，等等。</p>

<h4 id="lowerupper">lower/upper</h4>

<p>lower/upper 用于返回字符串的大写或小写形式。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="s">'PYTHON'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">x</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
<span class="s">'python'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">x</span>
<span class="s">'PYTHON'</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y</span> <span class="o">=</span> <span class="s">'python'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
<span class="s">'PYTHON'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y</span>
<span class="s">'python'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>小结:</p>

<ul>
  <li>字符串是不可变对象，调用对象自身的任意方法，也不会改变该对象自身的内容。相反，这些方法会创建新的对象并返回。</li>
  <li>translate 针对单个字符进行替换。</li>
</ul>

<h2 id="字典">字典</h2>

<p>有点复杂，先跳过。<a href="https://github.com/ethan-funny/explore-python/blob/master/Datatypes/dict.md">→</a></p>

<h2 id="集合">集合</h2>

<p>集合（set）和字典（dict）类似，它是一组 key 的集合，但不存储 value。集合的特性就是：key 不能重复。</p>

<p>集合具有以下常用操作。</p>

<h4 id="创建集合">创建集合</h4>

<p>set 的创建可以使用 <code class="highlighter-rouge">{}</code> 也可以使用 set 函数：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span> <span class="o">=</span> <span class="p">{</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">}</span>   <span class="c1"># 使用 {}
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s2</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="s">'helloworld'</span><span class="p">)</span>                <span class="c1"># 使用 set()，接收一个字符串
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">s2</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'e'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'h'</span><span class="p">,</span> <span class="s">'l'</span><span class="p">,</span> <span class="s">'o'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s3</span> <span class="o">=</span> <span class="nb">set</span><span class="p">([</span><span class="s">'.mp3'</span><span class="p">,</span> <span class="s">'.mp4'</span><span class="p">,</span> <span class="s">'.rmvb'</span><span class="p">,</span> <span class="s">'.mkv'</span><span class="p">,</span> <span class="s">'.mp3'</span><span class="p">])</span>   <span class="c1"># 使用 set()，接收一个列表
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">s3</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'.mp3'</span><span class="p">,</span> <span class="s">'.mkv'</span><span class="p">,</span> <span class="s">'.rmvb'</span><span class="p">,</span> <span class="s">'.mp4'</span><span class="p">])</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="遍历集合">遍历集合</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="p">{</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
<span class="o">...</span> 	<span class="k">print</span> <span class="n">e</span>
<span class="o">...</span>
<span class="n">a</span>
<span class="n">c</span>
<span class="n">b</span>
<span class="n">d</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="添加元素">添加元素</h4>

<p><code class="highlighter-rouge">add()</code> 方法可以将元素添加到 set 中，可以重复添加，但没有效果。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="p">{</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="s">'e'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="s">'a'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">])</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="删除元素">删除元素</h4>

<p><code class="highlighter-rouge">remove()</code> 方法可以删除集合中的元素, 但是删除不存在的元素，会抛出 KeyError，可改用 <code class="highlighter-rouge">discard()</code>。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="p">{</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s">'a'</span><span class="p">)</span>           <span class="c1"># 删除元素 'a'
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">s</span>
<span class="nb">set</span><span class="p">([</span><span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s">'e'</span><span class="p">)</span>           <span class="c1"># 删除不存在的元素，会抛出 KeyError
</span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">KeyError</span><span class="p">:</span> <span class="s">'e'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">discard</span><span class="p">(</span><span class="s">'e'</span><span class="p">)</span>          <span class="c1"># 删除不存在的元素, 不会抛出 KeyError
</span></pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="交集并集差集">交集/并集/差集</h4>

<p>Python 中的集合也可以看成是数学意义上的无序和无重复元素的集合，因此，我们可以对两个集合作交集、并集等。</p>

<p>看看例子：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s2</span> <span class="o">=</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">12</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s3</span> <span class="o">=</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span> <span class="o">&amp;</span> <span class="n">s2</span>            <span class="c1"># 交集
</span><span class="nb">set</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span> <span class="o">|</span> <span class="n">s2</span>            <span class="c1"># 并集
</span><span class="nb">set</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">12</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span> <span class="o">-</span> <span class="n">s2</span>            <span class="c1"># 差集
</span><span class="nb">set</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s3</span><span class="o">.</span><span class="n">issubset</span><span class="p">(</span><span class="n">s1</span><span class="p">)</span>    <span class="c1"># s3 是否是 s1 的子集
</span><span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s3</span><span class="o">.</span><span class="n">issubset</span><span class="p">(</span><span class="n">s2</span><span class="p">)</span>    <span class="c1"># s3 是否是 s2 的子集
</span><span class="bp">False</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span><span class="o">.</span><span class="n">issuperset</span><span class="p">(</span><span class="n">s3</span><span class="p">)</span>  <span class="c1"># s1 是否是 s3 的超集
</span><span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">s1</span><span class="o">.</span><span class="n">issuperset</span><span class="p">(</span><span class="n">s2</span><span class="p">)</span>  <span class="c1"># s1 是否是 s2 的超集
</span><span class="bp">False</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />
<blockquote>
  <p>Statement:This python learning series are posted only for personal studies and communication. The whole series are not allowed to be reproduced unles otherwise indicated. I do not own copyright of some of the content. If any post accidentally infringes your copyright, it will be removed shortly after being informed. View <strong><a href="https://mikelyou.com/2020/01/02/python-learning-00-readme/">python-learning-readme</a></strong> for more information.</p>
</blockquote>

<blockquote>
  <p>Note: From this section(#10), the reference is no longer <a href="https://github.com/jackfrued/Python-100-Days">Python-100-Days</a>, but <strong><a href="https://github.com/ethan-funny/explore-python">ethan-funny/explore-python</a></strong>. This two series may overlap. Depending on the necessity, these two series may be merged into one, and old posts may be deleted.</p>
</blockquote>
:ET